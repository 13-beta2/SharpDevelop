<AddIn name        = "SharpQuery"
       author      = "Luc Morin (based on work by Denis ERCHOFF)"
       url         = "http://www.icsharpcode.net"
       description = "Provides the database explorer pad">
	
	<Manifest>
		<Identity name="ICSharpCode.SharpQuery" version="@SharpQuery.dll"/>
	</Manifest>
	
	<Runtime>
		<Import assembly="SharpQuery.dll">
		</Import>
	</Runtime>
	
	<Path name = "/SharpQuery/Connection">
		<Class id = "ConnectionWrapper"
		       class = "SharpQuery.Connection.OLEDBConnectionWrapper"/>
		<SharpQueryConnection id ="Column"
			schema="SharpQuery.SchemaClass.SharpQueryColumn"
			node ="SharpQuery.Gui.TreeView.SharpQueryNodeColumn"/>
		<SharpQueryConnection id ="Parameter"
			schema="SharpQuery.SchemaClass.SharpQueryParameter"
			node ="SharpQuery.Gui.TreeView.SharpQueryNodeParameter"/>
		<SharpQueryConnection id ="Procedure"
			schema="SharpQuery.SchemaClass.SharpQueryProcedure"
			node ="SharpQuery.Gui.TreeView.SharpQueryNodeProcedure"/>
		<SharpQueryConnection id ="Table"
			schema="SharpQuery.SchemaClass.SharpQueryTable"
			node ="SharpQuery.Gui.TreeView.SharpQueryNodeTable"/>
		<SharpQueryConnection id ="View"
			schema="SharpQuery.SchemaClass.SharpQueryView"
			node ="SharpQuery.Gui.TreeView.SharpQueryNodeView"/>
		<SharpQueryConnection id ="NotSupported"
			schema="SharpQuery.SchemaClass.SharpQueryNotSupported"
			node ="SharpQuery.Gui.TreeView.SharpQueryNodeNotSupported"/>
		<SharpQueryConnection id ="Tables"
			schema="SharpQuery.SchemaClass.SharpQueryTables"
			node ="SharpQuery.Gui.TreeView.SharpQueryNodeTableRoot"/>
		<SharpQueryConnection id ="Views"
			schema="SharpQuery.SchemaClass.SharpQueryViews"
			node ="SharpQuery.Gui.TreeView.SharpQueryNodeViewRoot"/>
		<SharpQueryConnection id ="Procedures"
			schema="SharpQuery.SchemaClass.SharpQueryProcedures"
			node ="SharpQuery.Gui.TreeView.SharpQueryNodeProcedureRoot"/>
		<SharpQueryConnection id ="Schema"
			schema="SharpQuery.SchemaClass.SharpQuerySchema"
			node ="SharpQuery.Gui.TreeView.SharpQueryNodeSchema"/>
		<SharpQueryConnection id ="Catalog"
			schema="SharpQuery.SchemaClass.SharpQueryCatalog"
			node ="SharpQuery.Gui.TreeView.SharpQueryNodeCatalog"/>
		<SharpQueryConnection id ="OLEDB"
			schema="SharpQuery.Connection.OLEDBConnectionWrapper"
			node ="SharpQuery.Gui.TreeView.SharpQueryNodeConnection"/>
		<SharpQueryConnection id ="ADO"
			schema="SharpQuery.Connection.ADOConnectionWrapper"
			node ="SharpQuery.Gui.TreeView.SharpQueryNodeConnection"/>
	</Path>
	
	
	<Path name = "/SharpDevelop/Workbench/Pads">
		<Pad id    = "SharpQuery"
		     category = "Tools"
		     icon = "Icons.16x16.SharpQuery.DataBaseRoot"
		     title = "Database Explorer"
		     shortcut = "Control|Alt|B"
		     class = "SharpQuery.Pads.SharpQueryPad"/>
	</Path>
	
	<Path name = "/SharpQuery/ContextMenu/DatabaseRoot">
		<MenuItem id = "Refresh"
		          label = "${res:SharpQuery.Label.Refresh}"
		          icon = "Icons.16x16.SharpQuery.Refresh"
		          class = "SharpQuery.Commands.SharpQueryRefreshCommand"
		          loadclasslazy="false"/>
		<MenuItem id = "Separator1" type = "Separator"/>
		<MenuItem id = "AddConnection"
		          label = "${res:SharpQuery.Label.AddConnection}"
		          icon = "Icons.16x16.SharpQuery.AddConnection"
		          class = "SharpQuery.Commands.SharpQueryAddconnectionCommand"
		          loadclasslazy="false"/>
	
	</Path>
	
	<Path name = "/SharpQuery/ContextMenu/DatabaseConnection">
		<MenuItem id = "Refresh"
		          label = "${res:SharpQuery.Label.Refresh}"
		          icon = "Icons.16x16.SharpQuery.Refresh"
		          class = "SharpQuery.Commands.SharpQueryRefreshCommand"
		          loadclasslazy = "false"/>
		<MenuItem id = "Separator1" type = "Separator"/>
		<MenuItem id = "Supprimer"
		          label = "${res:SharpQuery.Label.Remove}"
		          icon = "Icons.16x16.SharpQuery.Remove"
		          class = "SharpQuery.Commands.SharpQueryRemoveConnectionCommand"
		          loadclasslazy = "false"/>
		<MenuItem id = "Separator2" type = "Separator"/>
		<MenuItem id = "ModifyConnection"
		          label = "${res:SharpQuery.Label.ModifyConnection}"
		          class = "SharpQuery.Commands.SharpQueryModifyConnectionCommand"
		          loadclasslazy="false"/>
		<MenuItem id = "Disconnect"
		          label = "${res:SharpQuery.Label.Disconnect}"
		          class = "SharpQuery.Commands.SharpQueryDisconnectCommand"
		          loadclasslazy="false"/>
		<MenuItem id = "Connect"
		          label = "${res:SharpQuery.Label.Connect}"
		          class = "SharpQuery.Commands.SharpQueryRefreshCommand"
		          loadclasslazy="false"/>
	</Path>
	
	<Path name = "/SharpQuery/ContextMenu/TablesRoot">
		<MenuItem id = "Refresh"
		          label = "${res:SharpQuery.Label.Refresh}"
		          icon = "Icons.16x16.SharpQuery.Refresh"
		          class = "SharpQuery.Commands.SharpQueryRefreshCommand"
		          loadclasslazy="false"/>
	</Path>
	
	<Path name = "/SharpQuery/ContextMenu/ViewsRoot">
		<MenuItem id = "Refresh"
		          label = "${res:SharpQuery.Label.Refresh}"
		          icon = "Icons.16x16.SharpQuery.Refresh"
		          class = "SharpQuery.Commands.SharpQueryRefreshCommand"
		          loadclasslazy="false"/>
	</Path>
	
	<Path name = "/SharpQuery/ContextMenu/ProceduresRoot">
		<MenuItem id = "Refresh"
		          label = "${res:SharpQuery.Label.Refresh}"
		          icon = "Icons.16x16.SharpQuery.Refresh"
		          class = "SharpQuery.Commands.SharpQueryRefreshCommand"
		          loadclasslazy="false"/>
	</Path>
	
	
	<Path name = "/SharpQuery/ContextMenu/Table">
		<MenuItem id = "Refresh"
		          label = "${res:SharpQuery.Label.Refresh}"
		          icon = "Icons.16x16.SharpQuery.Refresh"
		          class = "SharpQuery.Commands.SharpQueryRefreshCommand"
		          loadclasslazy="false"/>
		<MenuItem id = "ExtractData"
		          label = "${res:SharpQuery.Label.ExtractData}"
		          class = "SharpQuery.Commands.SharpQueryExecuteCommand"
		          loadclasslazy="false"/>
	</Path>
	
	<Path name = "/SharpQuery/ContextMenu/View">
		<MenuItem id = "Refresh"
		          label = "${res:SharpQuery.Label.Refresh}"
		          icon = "Icons.16x16.SharpQuery.Refresh"
		          class = "SharpQuery.Commands.SharpQueryRefreshCommand"
		          loadclasslazy="false"/>
		<MenuItem id = "ExtractData"
		          label = "${res:SharpQuery.Label.ExtractData}"
		          class = "SharpQuery.Commands.SharpQueryExecuteCommand"
		          loadclasslazy="false"/>
	</Path>
	
	
	<Path name = "/SharpQuery/ContextMenu/Procedure">
		<MenuItem id = "Refresh"
		          label = "${res:SharpQuery.Label.Refresh}"
		          icon = "Icons.16x16.SharpQuery.Refresh"
		          class = "SharpQuery.Commands.SharpQueryRefreshCommand"
		          loadclasslazy="false"/>
		<MenuItem id = "ExtractData"
		          label = "${res:SharpQuery.Label.ExtractData}"
		          class = "SharpQuery.Commands.SharpQueryExecuteCommand"
		          loadclasslazy="false"/>
	</Path>
	
	
	<Path name = "/SharpQuery/ContextMenu/Column">
		<MenuItem id = "Refresh"
		          label = "${res:SharpQuery.Label.Refresh}"
		          icon = "Icons.16x16.SharpQuery.Refresh"
		          class = "SharpQuery.Commands.SharpQueryRefreshCommand"
		          loadclasslazy="false"/>
	</Path>
	
	<Path name = "/SharpQuery/ContextMenu/Parameter">
		<MenuItem id = "Refresh"
		          label = "${res:SharpQuery.Label.Refresh}"
		          icon = "Icons.16x16.SharpQuery.Refresh"
		          class = "SharpQuery.Commands.SharpQueryRefreshCommand"
		          loadclasslazy="false"/>
	</Path>
	
	<Path name = "/SharpQuery/ContextMenu/Catalog">
		<MenuItem id = "Refresh"
		          label = "${res:SharpQuery.Label.Refresh}"
		          icon = "Icons.16x16.SharpQuery.Refresh"
		          class = "SharpQuery.Commands.SharpQueryRefreshCommand"
		          loadclasslazy="false"/>
	</Path>
	
	<Path name = "/SharpQuery/ContextMenu/Schema">
		<MenuItem id = "Refresh"
		          label = "${res:SharpQuery.Label.Refresh}"
		          icon = "Icons.16x16.SharpQuery.Refresh"
		          class = "SharpQuery.Commands.SharpQueryRefreshCommand"
		          loadclasslazy="false"/>
	</Path>

</AddIn>
