//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Drawing;	
using System.ComponentModel;
using System.Globalization;
	/// <summary>
	/// BaseClass for Today's Date
	/// </summary>
	/// <remarks>
	/// 	created by - Forstmeier Peter
	/// 	created on - 12.09.2005 22:48:04
	/// </remarks>
	
namespace SharpReportCore {
	public class BaseToday : BaseFunction {
		static string fnName = "SharpReport.Toolbar.Functions.TodaysDate";
		
		public BaseToday():base(fnName) {
			
		}
		
		public override void Render(ReportPageEventArgs rpea) {
			base.Render(rpea);
			
			string f;
			if (String.IsNullOrEmpty(this.FormatString)) {
				f = "d";
			} else {
				f = this.FormatString;
			}
			string formattedString = base.FormatOutput(System.DateTime.Now.ToString(CultureInfo.CurrentCulture),
			                                           f,
			                                           TypeCode.DateTime,
			                                           "");
			RectangleF rect = base.PrepareRectangle (rpea,formattedString);

			//Printout the textPart
			base.PrintTheStuff (rpea,this.Text,rect);

			//here we print the functionpart allway's with Stringalignment.Far
			StringFormat fmt = StringFormat;
			fmt.Alignment = StringAlignment.Far;
			fmt.LineAlignment = StringAlignment.Center;
			rpea.PrintPageEventArgs.Graphics.DrawString(formattedString,
			                                            this.Font,
			                                            Brushes.Black,
			                                            rect,
			                                            fmt);
			
			// goon
			base.NotiyfyAfterPrint (rpea.LocationAfterDraw);
		}
		
		public override string ToString() {
			return "BaseToday";
		}
		
		[Browsable(false)]
		public override ContentAlignment ContentAlignment {
			get {
				return base.ContentAlignment;
			}
			set {
				base.ContentAlignment = value;
			}
		}
		
	}
}
