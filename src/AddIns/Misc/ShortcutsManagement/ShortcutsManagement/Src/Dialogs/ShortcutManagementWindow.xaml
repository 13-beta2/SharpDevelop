<Window x:Class="ICSharpCode.ShortcutsManagement.ShortcutManagementWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ShortcutsManagement="clr-namespace:ICSharpCode.ShortcutsManagement"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:Converters="clr-namespace:ICSharpCode.ShortcutsManagement.Converters"
    Title="{Binding Path=Name}" MinHeight="400" MinWidth="400">

    <Window.Resources>
        <Converters:InputGestureConverter x:Key="InputGestureConverter" />

        <LinearGradientBrush x:Key="SelectedItemBackground" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#3194FF" Offset="0" />
            <GradientStop Color="#3984F7" Offset="1" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="SelectedItemForeground" Color="#FFF" />
    </Window.Resources>
    
    <Grid Margin="8,8,8,8">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100" />
            <ColumnDefinition />
            <ColumnDefinition Width="20" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="50*" />
            <RowDefinition Height="50*" />
            <RowDefinition Height="30" />
        </Grid.RowDefinitions>

        <Label x:Name="shortcutLabel" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Center">Shortcut key</Label>
        <TextBox x:Name="shortcutTextBox" PreviewKeyDown="shortcutTextBox_PreviewKeyDown" Margin="3,3,3,3" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Stretch" AcceptsTab="True" AcceptsReturn="True"></TextBox>
        
        <Button x:Name="addGestureButton" Grid.Column="2" Grid.Row="0" Click="addGestureButton_Click">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image Source="..\..\Resources\add-smaller.png" Width="20" />
                </ControlTemplate>
            </Button.Template>
        </Button>
        
        <Label x:Name="otherShortcutsLabel" Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top">Other shortcuts</Label>
        <ListBox x:Name="otherShortcutsListBox" ItemsSource="{Binding Path=Gestures}" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" Margin="3,3,3,3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <ListBox.Resources>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <StackPanel>
                                    <Border x:Name="ListBoxItemBorder" CornerRadius="6" Padding="10, 5" Background="{TemplateBinding Background}">
                                        <ContentPresenter />
                                    </Border>
                                </StackPanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="ListBoxItemBorder" Property="Panel.Background" Value="{StaticResource SelectedItemBackground}" />
                                        <Setter TargetName="ListBoxItemBorder" Property="TextElement.Foreground" Value="{StaticResource SelectedItemForeground}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.Resources>
            <ListBox.ItemTemplate>
                <DataTemplate DataType="{x:Type InputGesture}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="{Binding Converter={StaticResource InputGestureConverter}}" Grid.Column="0" />
                        <Button x:Name="removeGestureButton" Grid.Column="1" Visibility="Hidden" Click="removeGestureButton_Click" Tag="{Binding}"  >
                            <Button.Template>
                                <ControlTemplate>
                                    <Image Source="../../Resources/16-square-red-remove.png" Width="16"/>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                        
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                            <Setter Property="Visibility" TargetName="removeGestureButton" Value="Visible" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Label x:Name="otherCommandsLabel" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Top">Other commands</Label>
        <!-- <ListBox x:Name="otherCommandsListBox" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" Margin="3,3,3,3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" /> -->

        <ShortcutsManagement:ShortcutsManagementOptionsPanel x:Name="shortcutsManagementOptionsPanel" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" IsSearchable="False" Padding="3" />
        
        <Grid  Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="80" />
                <ColumnDefinition Width="80" />
            </Grid.ColumnDefinitions>

            <Button Click="resetButton_Click" x:Name="resetButton" Grid.Column="1" Margin="3,3,3,3">Reset</Button>
            <Button Click="saveButton_Click" x:Name="saveButton" Grid.Column="2" Margin="3,3,3,3">Save</Button>
        </Grid>
    </Grid>

</Window>
