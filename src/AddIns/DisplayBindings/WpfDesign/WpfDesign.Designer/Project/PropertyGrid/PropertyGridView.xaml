<UserControl x:Class="ICSharpCode.WpfDesign.Designer.PropertyGrid.PropertyGridView"
             xmlns="http://schemas.microsoft.com/netfx/2007/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Converters="clr-namespace:ICSharpCode.WpfDesign.Designer.Converters"
             xmlns:PropertyGrid="clr-namespace:ICSharpCode.WpfDesign.Designer.PropertyGrid"
             xmlns:PropertyGridBase="clr-namespace:ICSharpCode.WpfDesign.PropertyGrid;assembly=ICSharpCode.WpfDesign"
             xmlns:Controls="clr-namespace:ICSharpCode.WpfDesign.Designer.Controls"
             Background="{x:Static SystemColors.ControlLightBrush}"
             SnapsToDevicePixels="True"
             >

    <UserControl.Resources>

        <Style x:Key="ExpandButtonStyle"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable"
                    Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent">
                            <Border Width="9"
                                    Height="9"
                                    SnapsToDevicePixels="true"
                                    BorderBrush="#FF7898B5"
                                    BorderThickness="1"
                                    CornerRadius="1">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="1,1"
                                                         StartPoint="0,0">
                                        <GradientStop Color="White"
                                                      Offset=".2" />
                                        <GradientStop Color="#FFC0B7A6"
                                                      Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Path Margin="1,1,1,1"
                                      x:Name="ExpandPath"
                                      Fill="Black"
                                      Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
                                     Value="True">
                                <Setter Property="Data"
                                        TargetName="ExpandPath"
                                        Value="M 0 2 L 0 3 L 5 3 L 5 2 Z" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MoreButtonStyle"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable"
                    Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="#F9F9F4"
                                BorderThickness="1 0 1 0"
                                BorderBrush="{x:Static SystemColors.ControlBrush}">
                            <!--<TextBlock Text="More..."
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"
                                       Margin="18 0 0 0"
                                       Foreground="{x:Static SystemColors.ControlDarkBrush}" />-->
                            <Path x:Name="arrow"
                                  Data="M 0 0 L 5 5 L 10 0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Fill="{x:Static SystemColors.ControlDarkBrush}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
                                     Value="True">
                                <Setter TargetName="arrow"
                                        Property="Data"
                                        Value="M 0 5 L 5 0 L 10 5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CategoryToggleStyle"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable"
                    Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border BorderThickness="0 1 0 0"
                                BorderBrush="#ECE9D8">
                            <StackPanel Orientation="Horizontal"
                                        Background="{x:Static  SystemColors.ControlLightBrush}">
                                <ToggleButton Style="{StaticResource ExpandButtonStyle}"
                                              IsChecked="{Binding IsExpanded}"
                                              VerticalAlignment="Center"
                                              Margin="3 0 7 0" />
                                <TextBlock Text="{Binding Name}"
                                           VerticalAlignment="Center"
                                           FontWeight="Bold"
                                           Foreground="{x:Static SystemColors.ControlDarkBrush}" />
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type PropertyGrid:PropertyTreeView}">
            <Setter Property="Background"
                    Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PropertyGrid:PropertyTreeView}">
                        <Border BorderThickness="0 1 1 0"
                                BorderBrush="{x:Static SystemColors.ControlBrush}"
                                Background="{TemplateBinding Background}">
                            <!--<ScrollViewer HorizontalScrollBarVisibility="Disabled">-->
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ItemsPresenter />

                                <Thumb x:Name="PART_Thumb"
                                       HorizontalAlignment="Left"
                                       Width="4"
                                       Margin="-2 0 0 0"
                                       Cursor="SizeWE">
                                    <Thumb.RenderTransform>
                                        <TranslateTransform X="{Binding FirstColumnWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type PropertyGrid:PropertyGridView}}}" />
                                    </Thumb.RenderTransform>
                                    <Thumb.Template>
                                        <ControlTemplate>
                                            <Border Background="Transparent" />
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Grid>
                            <!--</ScrollViewer>-->
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type PropertyGrid:PropertyTreeViewItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PropertyGrid:PropertyTreeViewItem}">

                        <DockPanel>
                            <Border MinHeight="20"
                                    BorderThickness="1 0 0 1"
                                    BorderBrush="{x:Static SystemColors.ControlBrush}"
                                    Background="{TemplateBinding Background}"
                                    DockPanel.Dock="Top">
                                <DockPanel>
                                    <DockPanel Width="{Binding FirstColumnWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type PropertyGrid:PropertyGridView}}}"
                                               DockPanel.Dock="Left">
                                        <ToggleButton x:Name="expandButton"
                                                      DockPanel.Dock="Left"
                                                      Margin="{TemplateBinding Level, Converter={x:Static Converters:LevelConverter.Instance}}"
                                                      Style="{StaticResource ExpandButtonStyle}"
                                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <TextBlock Text="{Binding Name}"
                                                   TextTrimming="CharacterEllipsis"
                                                   VerticalAlignment="Center"
                                                   Margin="7 0 0 0"
                                                   ToolTip="{Binding Description}"
                                                   FontWeight="{Binding FontWeight}"
                                                   />
                                    </DockPanel>
                                    <Border BorderThickness="1 0 0 0"
                                            BorderBrush="{x:Static SystemColors.ControlBrush}">
                                        <ContentPresenter Content="{Binding Editor}"
                                                          VerticalAlignment="Center"
                                                          Margin="3 0" />
                                    </Border>
                                </DockPanel>
                            </Border>
                            <ItemsPresenter x:Name="itemsHost" />
                        </DockPanel>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded"
                                     Value="False">
                                <Setter TargetName="itemsHost"
                                        Property="Visibility"
                                        Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="HasItems"
                                     Value="False">
                                <Setter TargetName="expandButton"
                                        Property="Visibility"
                                        Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CategoryExpanderStyle"
               TargetType="Expander">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <DockPanel>
                            <ToggleButton Height="17"
                                          IsChecked="{Binding IsExpanded}"
                                          DockPanel.Dock="Top"
                                          Style="{StaticResource CategoryToggleStyle}" />
                            <ContentPresenter x:Name="ExpandSite"
                                              Visibility="Collapsed" />
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded"
                                     Value="True">
                                <Setter Property="Visibility"
                                        Value="Visible"
                                        TargetName="ExpandSite" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MoreExpanderStyle"
               TargetType="Expander">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <DockPanel>
                            <ToggleButton IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource MoreButtonStyle}"
                                          DockPanel.Dock="Top"
                                          Height="12" />
                            <ContentPresenter x:Name="ExpandSite"
                                              Visibility="Collapsed" />
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded"
                                     Value="True">
                                <Setter Property="Visibility"
                                        Value="Visible"
                                        TargetName="ExpandSite" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate DataType="{x:Type PropertyGrid:Category}">
            <Expander Header="{Binding Name}"
                      Style="{StaticResource CategoryExpanderStyle}"
                      IsExpanded="{Binding IsExpanded}">
                <StackPanel>
                    <PropertyGrid:PropertyTreeView ItemsSource="{Binding Properties}" />
                    <Expander Visibility="{Binding MoreProperties, Converter={x:Static Converters:CollapsedWhenEmptyCollection.Instance}}"
                              Style="{StaticResource MoreExpanderStyle}"
                              IsExpanded="{Binding ShowMore}">
                        <PropertyGrid:PropertyTreeView ItemsSource="{Binding MoreProperties}"
                                                       Background="#F9F9F4" />
                    </Expander>
                </StackPanel>
            </Expander>
        </DataTemplate>

        <HierarchicalDataTemplate DataType="{x:Type PropertyGridBase:PropertyNode}"
                                  ItemsSource="{Binding Children}" />
        
        <!--<DataTemplate DataType="{x:Type FontFamily}">
            <TextBlock Text="{Binding}"                       
                       FontFamily="{Binding}"
                       FontSize="16"/>
        </DataTemplate>-->

    </UserControl.Resources>

    <DockPanel>
        <Grid DockPanel.Dock="Top"
              Height="78">
            <TextBlock Text="Name:"
                       Margin="6,30.275,0,33.948"
                       HorizontalAlignment="Left"
                       Width="32.033" />
            <TextBlock Text="Type:"
                       VerticalAlignment="Top"
                       Margin="6.424,7.998,0,0"
                       Height="13.277" />
            <TextBlock Text="Filter:"
                       HorizontalAlignment="Left"
                       Margin="6,53.553,0,0"
                       VerticalAlignment="Top" />

            <Controls:EnterTextBox x:Name="NameTextBox"
                                   x:FieldModifier="public"
                                   Text="{Binding SingleItem.Name}"
                                   IsEnabled="{Binding SingleItem, Converter={x:Static Converters:FalseWhenNull.Instance}}"
                                   Margin="44.033,27.275,6,0"
                                   Height="19.277"
                                   VerticalAlignment="Top" />
            <TextBlock Text="{Binding SingleItem.ComponentType.Name}"
                       ToolTip="{Binding SingleItem.ComponentType}"
                       Margin="44.033,7.998,6,0"
                       Height="13.277"
                       VerticalAlignment="Top" />
            <Controls:EnterTextBox Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}"
                                   Margin="44.033,50.553,52,0"
                                   VerticalAlignment="Top"
                                   Height="19.277" />

            <Button x:Name="clearButton"
                    Content="Clear"
                    Click="clearButton_Click"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Margin="0,49.552,6,0"
                    Height="21.277"
                    Width="40" />
        </Grid>
        <TabControl SelectedIndex="{Binding CurrentTab, Converter={x:Static Converters:IntFromEnumConverter.Instance}}">
            <TabItem Header="Properties">
                <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                    <ItemsControl ItemsSource="{Binding Categories}" />
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Events">
                <PropertyGrid:PropertyTreeView ItemsSource="{Binding Events}" />
            </TabItem>
        </TabControl>
    </DockPanel>

</UserControl>
