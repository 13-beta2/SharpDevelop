<AddIn name        = "Boo Binding"
       author      = "Daniel Grunwald"
       copyright   = "GPL"
       url         = "http://boo.codehaus.org/Boo+AddIn+For+SharpDevelop"
       description = "Backing binding for Boo">
	
	<Manifest>
		<Identity name = "ICSharpCode.BooBinding"/>
		<Dependency addin = "ICSharpCode.FormsDesigner"/>
	</Manifest>
	
	<Runtime>
		<Import assembly = "$ICSharpCode.FormsDesigner/FormsDesigner.dll"/>
		<Import assembly = "BooBinding.dll"/>
		<Import assembly = ":ICSharpCode.SharpDevelop"/>
	</Runtime>
	
	<Path name = "/SharpDevelop/Workbench/FileFilter">
		<FileFilter id = "Boo"
		            insertbefore="AllFiles"
		            name = "Boo Files (*.boo)"
		            extensions = "*.boo"/>
	</Path>
	
	<Path name = "/Workspace/Icons">
		<Icon id         = "BooPrj"
		      language   = "Boo"
		      resource   = "Boo.ProjectIcon"/>
		
		<Icon id         = "BooFile"
		      extensions = ".boo"
		      resource   = "Boo.FileIcon"/>
	</Path>
	
	<Path name = "/SharpDevelop/BackendBindings/Templates">
		<Directory id = "Boo" path = "./Templates" />
	</Path>
	
	<Path name = "/SharpDevelop/Workbench/Ambiences">
		<Class id    = "Boo"
		       class = "Grunwald.BooBinding.BooAmbience"/>
	</Path>
	
	<Path name = "/Workspace/Parser">
		<Parser id    = "Boo"
		        supportedextensions  = ".boo"
		        projectfileextension = ".booproj"
		        class = "Grunwald.BooBinding.CodeCompletion.BooParser"/>
	</Path>
	
	<Path name = "/AddIns/DefaultTextEditor/Formatter/Boo">
		<Class id = "BooFormatter" class = "Grunwald.BooBinding.BooFormattingStrategy"/>
	</Path>
	
	<Path name = "/AddIns/DefaultTextEditor/CodeCompletion">
		<CodeCompletionBinding id = "Boo" extensions = ".boo" class = "Grunwald.BooBinding.CodeCompletion.CompletionBinding"/>
	</Path>
	
	<Path name = "/SharpDevelop/Workbench/DisplayBindings">
		<DisplayBinding id              = "BooFormsDesigner"
		                type            = "Secondary"
		                fileNamePattern = "\.boo$"
		                languagePattern = "^Boo$"
		                class           = "Grunwald.BooBinding.Designer.FormsDesignerDisplayBinding" />
	</Path>
	
	<Path path = "/SharpDevelop/BackendBindings/ProjectOptions/Boo">
		<DialogPanel id    = "Application"
		             label = "Application"
		             class = "ICSharpCode.SharpDevelop.Gui.OptionPanels.ApplicationSettings"/>
		<!--<DialogPanel id    = "ReferencePaths"
		             label = "Reference Paths"
		             class = "ICSharpCode.SharpDevelop.Gui.OptionPanels.ReferencePaths"/>-->
		<!--<DialogPanel id    = "Signing"
		             label = "Signing"
		             class = "ICSharpCode.SharpDevelop.Gui.OptionPanels.Signing"/>-->
		<DialogPanel id    = "BuildEvents"
		             label = "Build Events"
		             class = "ICSharpCode.SharpDevelop.Gui.OptionPanels.BuildEvents"/>
		<!--<DialogPanel id    = "BuildOptions"
		             label = "Build"
		             class = "ICSharpCode.ILAsmBinding.BuildOptions"/>-->
		<DialogPanel id    = "DebugOptions"
		             label = "Debug"
		             class = "ICSharpCode.SharpDevelop.Gui.OptionPanels.DebugOptions"/>
		<!--<DialogPanel id    = "Publish"
		             label = "Publish"
		             class = "ICSharpCode.SharpDevelop.Gui.OptionPanels.Publish"/>-->
	</Path>
	
	<Path name = "/SharpDevelop/Workbench/LanguageBindings">
		<LanguageBinding id                   = "Boo"
		                 guid                 = "{A33008B1-5DAC-44D5-9060-242E3B6E38F2}"
		                 supportedextensions  = ".boo"
		                 projectfileextension = ".booproj"
		                 class                = "Grunwald.BooBinding.BooLanguageBinding" />
	</Path>

	<Path name = "/SharpDevelop/Workbench/MainMenu/Tools">
		<ComplexCondition action = "Disable">
			<And>
				<Or>
					<Condition name = "WindowActive" activewindow="ICSharpCode.FormsDesigner.FormsDesignerViewContent"/>
					<Condition name = "WindowActive" activewindow="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.ITextEditorControlProvider"/>
				</Or>
				<Or>
					<Condition name="ActiveContentExtension" activeextension=".cs"/>
					<Condition name="ActiveContentExtension" activeextension=".vb"/>
				</Or>
			</And>
			<MenuItem id = "ConvertBufferToBoo"
			          insertbefore = "ConvertBuffer"
			          insertafter = "Separator2"
			          label = "${res:XML.MainMenu.ToolMenu.ConvertBufferToBoo}"
			          class = "Grunwald.BooBinding.ConvertBuffer"/>
		</ComplexCondition>
	</Path>
</AddIn>
