// <file>
//     <copyright see="prj:///doc/copyright.txt"/>
//     <license see="prj:///doc/license.txt"/>
//     <owner name="Matthew Ward" email="mrward@users.sourceforge.net"/>
//     <version>$Revision$</version>
// </file>

using System;
using System.Windows.Input;

using ICSharpCode.RubyBinding;
using ICSharpCode.SharpDevelop;
using Microsoft.Scripting.Hosting.Shell;
using NUnit.Framework;
using RubyBinding.Tests.Utils;

namespace RubyBinding.Tests.Console
{
	/// <summary>
	/// Pressing the up key closes the completion window when it should not. This fixture tests
	/// that the up, down, home and end key do not close this window.
	/// </summary>
	[TestFixture]
	public class KeysPressedWhenCompletionWindowOpenTestFixture
	{
		RubyConsole rubyConsole;
		MockConsoleTextEditor textEditor;
		string prompt = ">>> ";
		
		[SetUp]
		public void Init()
		{
			textEditor = new MockConsoleTextEditor();
			rubyConsole = new RubyConsole(textEditor, null);
			rubyConsole.Write(prompt, Style.Prompt);
			
			textEditor.RaisePreviewKeyDownEvent(Key.A);
			textEditor.RaisePreviewKeyDownEventForDialogKey(Key.Enter);
			rubyConsole.Write(prompt, Style.Prompt);
			textEditor.RaisePreviewKeyDownEvent(Key.B);
			textEditor.RaisePreviewKeyDownEvent(Key.OemPeriod);
		}
		
		[Test]
		public void ShowCompletionWindowIsCalled()
		{
			Assert.IsTrue(textEditor.IsShowCompletionWindowCalled);
		}
		
		[Test]
		public void UpKeyDoesNothing()
		{
			Assert.IsFalse(textEditor.RaisePreviewKeyDownEventForDialogKey(Key.Up));
		}
		
		[Test]
		public void DownKeyDoesNothing()
		{
			Assert.IsFalse(textEditor.RaisePreviewKeyDownEventForDialogKey(Key.Down));
		}
	}
}
