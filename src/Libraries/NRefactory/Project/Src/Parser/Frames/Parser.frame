-->begin
using System;

-->namespace

partial class Parser : AbstractParser
{
-->constants
	const  bool   T            = true;
	const  bool   x            = false;
	
-->declarations

	void Get () {
-->pragmas
		lexer.NextToken();
	}

-->productions
	
	void ParseRoot()
	{
-->parseRoot
	}
	
	private bool StartOf(int s)
	{
		return set[s, lexer.LookAhead.kind];
	}

	protected override void SynErr(int line, int col, int errorNumber)
	{
		this.Errors.Error(line, col, ErrorDesc(errorNumber));
	}

	static bool[,] set = {
-->initialization
	};
	
	string ErrorDesc(int errorNumber)
	{
		switch (errorNumber) {
-->errors
			default: return "error " + errorNumber;
		}
	}

} // end Parser

$$$
