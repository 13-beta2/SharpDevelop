<?xml version="1.0"?>
<Template author="Justin Dearing" version="1.0">
	<Config
		name		= "${res:Templates.File.ConfigurationElement.Name}"
		icon		= "C#.File.Form"
		category	= "C#"
		defaultname = "Class${Number}.cs"
		language	= "C#"/>
	<Description>${res:Templates.File.ConfigurationElement.Description}</Description>  
	<!--
	Special new file templates:
		${StandardNamespace}		-> Standardnamespace of the current project or FileNameWithoutExtension
		${FullName}				 -> Full generated path name
		${FileName}				 -> File name with extension
		${FileNameWithoutExtension} -> File name without extension
		${Extension}				-> Extension in the form ".cs"
		${Path}					 -> Full path of the file
		${ClassName}				-> Class name (generally FileNameWithoutExtension w/o 'bad' characters)
	 -->
	<Files>
<File name="${Path}/${FileNameWithoutExtension}.cs" language="C#"><![CDATA[${StandardHeader.C#}

using System;   
using System.Configuration;

namespace ${StandardNamespace}
{
	public sealed class ${ClassName}Element : ConfigurationElement
	{
		/// <summary>
		/// The attribute <c>name</c> of a <c>${ClassName}Element</c>.
		/// </summary>
		[ConfigurationProperty("name", IsKey = true, IsRequired = true)]
		public string Name
		{
			get { return (string)this["name"]; }
			set { this["name"] = value; }
		}
	
	
		/// <summary>
		/// A demonstration of how to use a boolean property.
		/// </summary>
		[ConfigurationProperty("special")]
		public bool IsSpecial {
			get { return (bool)this["special"]; }
			set { this["special"] = value; }
		}
	}
	
}
]]></File>
	</Files>
	<AdditionalOptions/>
</Template>
